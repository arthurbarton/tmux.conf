#!/bin/bash

if [ -z $1 ]; then
  echo "Usage: $0 Yahoo weather location [c|f|k]"
  WEATHER_LOC=12706662
  exit 1
else
  WEATHER_LOC=$1
fi

if [ -z $2 ]; then
  WEATHER_UNIT="c"
else
  WEATHER_UNIT=$2
fi

WEATHER_LOC=12706662

__yahoo_weather() {
	degree=""

	if [ -z "$degree" ]; then
		weather_data=$(curl --max-time 4 -s "http://weather.yahooapis.com/forecastrss?w=${WEATHER_LOC}&u=${WEATHER_UNIT}")
		if [ "$?" -eq "0" ]; then
			error=$(echo "$weather_data" | grep "problem_cause\|DOCTYPE");
			if [ -n "$error" ]; then
				echo "error"
				exit 1
			fi

			# Assume latest grep is in PATH
			gnugrep="grep"

			# <yweather:units temperature="F" distance="mi" pressure="in" speed="mph"/>
			unit=$(echo "$weather_data" | "$gnugrep" -PZo "<yweather:units [^<>]*/>" | sed 's/.*temperature="\([^"]*\)".*/\1/')
			condition=$(echo "$weather_data" | "$gnugrep" -PZo "<yweather:condition [^<>]*/>")
			# <yweather:condition  text="Clear"  code="31"  temp="66"  date="Mon, 01 Oct 2012 8:00 pm CST" />
			degree=$(echo "$condition" | sed 's/.*temp="\([^"]*\)".*/\1/')
			condition=$(echo "$condition" | sed 's/.*text="\([^"]*\)".*/\1/')
			# Pull the times for sunrise and sunset so we know when to change the day/night indicator
			# <yweather:astronomy sunrise="6:56 am"   sunset="6:21 pm"/>

      date_cmd=date
      type -p gdate 2>&1 > /dev/null && date_cmd=gdate || date_cmd=date

			sunrise=$($date_cmd -d"$(echo "$weather_data" | "$gnugrep" "yweather:astronomy" | sed 's/^\(.*\)sunset.*/\1/' | sed 's/^.*sunrise="\(.*m\)".*/\1/')" +%H%M)
			sunset=$($date_cmd -d"$(echo "$weather_data" | "$gnugrep" "yweather:astronomy" | sed 's/^.*sunset="\(.*m\)".*/\1/')" +%H%M)
		fi
	fi

	if [ -n "$degree" ]; then
		if [ "$WEATHER_UNIT" == "k" ]; then
			degree=$(echo "${degree} + 273.15" | bc)
		fi
		condition_symbol=$(__get_condition_symbol "$condition" "$sunrise" "$sunset") 
		echo -n "${condition_symbol} ${degree}"
		#echo -n "${condition_symbol} ${degree}°"#
   # $(echo "$WEATHER_UNIT" | tr '[:lower:]' '[:upper:]')" 
	fi
}

# Get symbol for condition. Available conditions: http://developer.yahoo.com/weather/#codes
__get_condition_symbol() {
	local condition=$(echo "$1" | tr '[:upper:]' '[:lower:]')
    local sunrise="$2"
    local sunset="$3"
	case "$condition" in
		"sunny" | "hot")
			hourmin=$(date +%H%M)
			if [ "$hourmin" -ge "$sunset" -o "$hourmin" -le "$sunrise" ]; then
				#echo "☽"
				echo "☾"
			else
				#echo "☀"
				echo "☼"
			fi
			;;
		"rain" | "mixed rain and snow" | "mixed rain and sleet" | "freezing drizzle" | "drizzle" | "light drizzle" | "freezing rain" | "showers" | "mixed rain and hail" | "scattered showers" | "isolated thundershowers" | "thundershowers" | "light rain with thunder" | "light rain" | "rain and snow")
			#echo "☂"
			echo "☔"
			;;
		"snow" | "mixed snow and sleet" | "snow flurries" | "light snow showers" | "blowing snow" | "sleet" | "hail" | "heavy snow" | "scattered snow showers" | "snow showers" | "light snow" | "snow/windy" | "snow grains" | "snow/fog")
			#echo "☃"
			echo "❅"
			;;
		"cloudy" | "mostly cloudy" | "partly cloudy" | "partly cloudy/windy")
			echo "☁"
			;;
		"tornado" | "tropical storm" | "hurricane" | "severe thunderstorms" | "thunderstorms" | "isolated thunderstorms" | "scattered thunderstorms")
			#echo "⚡"
			echo "☈"
			;;
		"dust" | "foggy" | "fog" | "haze" | "smoky" | "blustery" | "mist")
			#echo "♨"
			#echo "﹌"
			echo "〰"
			;;
		"windy" | "fair/windy")
			#echo "⚐"
			echo "⚑"
			;;
		"clear" | "fair" | "cold")
			hourmin=$(date +%H%M)
			if [ "$hourmin" -ge "$sunset" -o "$hourmin" -le "$sunrise" ]; then
				echo "☾"
			else
				echo "〇"
			fi
			;;
		*)
			echo "?"
			;;
	esac
}

__yahoo_weather
